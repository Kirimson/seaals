{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"Seal": {
				"description": "Model describing a Seal",
				"properties": {
					"id": {
						"type": "number",
						"format": "double",
						"description": "ID of the Seal"
					},
					"slug": {
						"type": "string",
						"description": "Slug for the Seal's filename"
					},
					"tags": {
						"items": {
							"$ref": "#/components/schemas/Tag"
						},
						"type": "array",
						"description": "Tags associated with this Seal"
					}
				},
				"required": [
					"id",
					"slug",
					"tags"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Tag": {
				"description": "Model describing a Tag",
				"properties": {
					"id": {
						"type": "number",
						"format": "double",
						"description": "ID of the Tag"
					},
					"name": {
						"type": "string",
						"description": "Name of the Tag"
					},
					"seals": {
						"items": {
							"$ref": "#/components/schemas/Seal"
						},
						"type": "array",
						"description": "Seals associated with this Tag"
					}
				},
				"required": [
					"id",
					"name",
					"seals"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SealResponse": {
				"description": "Generic response message",
				"properties": {
					"message": {
						"type": "string",
						"description": "Message providing information about the response"
					}
				},
				"required": [
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ManySeals": {
				"description": "Model containing multiple Seals",
				"properties": {
					"count": {
						"type": "number",
						"format": "double",
						"description": "Amount of Seals returned"
					},
					"offset": {
						"type": "number",
						"format": "double",
						"description": "Offset started from"
					},
					"limit": {
						"type": "number",
						"format": "double",
						"description": "The limit that was set on the request"
					},
					"seals": {
						"items": {
							"$ref": "#/components/schemas/Seal"
						},
						"type": "array",
						"description": "List of Seal objects"
					}
				},
				"required": [
					"count",
					"offset",
					"limit",
					"seals"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SealError": {
				"description": "Response when something goes wrong",
				"properties": {
					"message": {
						"type": "string",
						"description": "Message detailing the error, if the error is known"
					},
					"error": {
						"type": "string",
						"description": "Error code for the error. Usually a Prisma error"
					}
				},
				"required": [
					"message",
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ManyTags": {
				"description": "Model containing multiple Tags",
				"properties": {
					"offset": {
						"type": "number",
						"format": "double",
						"description": "Offset started from"
					},
					"limit": {
						"type": "number",
						"format": "double",
						"description": "The limit that was set on the request"
					},
					"tags": {
						"items": {
							"$ref": "#/components/schemas/Tag"
						},
						"type": "array",
						"description": "List of Tag objects"
					}
				},
				"required": [
					"offset",
					"limit",
					"tags"
				],
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "seaals",
		"version": "1.0.0",
		"license": {
			"name": "ISC"
		},
		"contact": {}
	},
	"openapi": "3.0.0",
	"paths": {
		"/api/seals/id/{id}": {
			"get": {
				"operationId": "GetSeal",
				"responses": {
					"200": {
						"description": "Data for a Seal",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Seal"
								}
							}
						}
					}
				},
				"description": "Get a Specific Seal",
				"tags": [
					"Seals API"
				],
				"security": [],
				"parameters": [
					{
						"description": "Id of a seal",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			},
			"delete": {
				"operationId": "DeleteSeal",
				"responses": {
					"200": {
						"description": "Deletion confirmation",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SealResponse"
								}
							}
						}
					}
				},
				"description": "Delete a Seal",
				"tags": [
					"Seals API"
				],
				"security": [],
				"parameters": [
					{
						"description": "Id of a seal to delete",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/api/seals": {
			"get": {
				"operationId": "GetAllSeals",
				"responses": {
					"200": {
						"description": "Data for a Seal",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ManySeals"
								}
							}
						}
					}
				},
				"description": "Get all Seals",
				"tags": [
					"Seals API"
				],
				"security": [],
				"parameters": [
					{
						"description": "Offset to start at",
						"in": "query",
						"name": "offset",
						"required": false,
						"schema": {
							"default": 0,
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "Amount to seals to get. Defaults to 20",
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"default": 20,
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "ID of a seal to get",
						"in": "query",
						"name": "id",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "Slug to identify seal with",
						"in": "query",
						"name": "slug",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Tags to search for",
						"in": "query",
						"name": "tags",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					}
				]
			},
			"post": {
				"operationId": "CreateSeal",
				"responses": {
					"200": {
						"description": "Data for a Seal",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/Seal"
										},
										{
											"$ref": "#/components/schemas/SealError"
										}
									]
								}
							}
						}
					}
				},
				"description": "Create a new seal",
				"tags": [
					"Seals API"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"multipart/form-data": {
							"schema": {
								"type": "object",
								"properties": {
									"tags": {
										"type": "string",
										"description": "comma delimited tags for the seal"
									},
									"file": {
										"type": "string",
										"format": "binary"
									}
								},
								"required": [
									"tags",
									"file"
								]
							}
						}
					}
				}
			}
		},
		"/api/seals/{id}": {
			"put": {
				"operationId": "UpdateSeal",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Seal"
								}
							}
						}
					}
				},
				"description": "Updates a Seal's tags",
				"tags": [
					"Seals API"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "tags",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					}
				]
			}
		},
		"/api/tags": {
			"get": {
				"operationId": "GetAllSeals",
				"responses": {
					"200": {
						"description": "Data for a Seal",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ManyTags"
								}
							}
						}
					}
				},
				"description": "Get all Tags",
				"tags": [
					"Tags API"
				],
				"security": [],
				"parameters": [
					{
						"description": "Offset to start at",
						"in": "query",
						"name": "offset",
						"required": false,
						"schema": {
							"default": 0,
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "Amount to seals to get. Defaults to 20\nInclude associated Seals with response",
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"default": 20,
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "includeSeals",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					}
				]
			}
		},
		"/api/tags/id/{id}": {
			"get": {
				"operationId": "GetTag",
				"responses": {
					"200": {
						"description": "Data for a Tag",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Tag"
								}
							}
						}
					}
				},
				"description": "Get a Specific Tag by ID",
				"tags": [
					"Tags API"
				],
				"security": [],
				"parameters": [
					{
						"description": "Id of a tag",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "Boolean to include associated Seals",
						"in": "query",
						"name": "includeSeals",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					}
				]
			},
			"delete": {
				"operationId": "DeleteTag",
				"responses": {
					"200": {
						"description": "Deletion confirmation",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SealResponse"
								}
							}
						}
					}
				},
				"description": "Delete a Tag by ID",
				"tags": [
					"Tags API"
				],
				"security": [],
				"parameters": [
					{
						"description": "Id of a tag to delete",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/api/tags/tag/{name}": {
			"get": {
				"operationId": "GetTagByName",
				"responses": {
					"200": {
						"description": "Data for a Tag",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Tag"
								}
							}
						}
					}
				},
				"description": "Get a Specific Tag by ID",
				"tags": [
					"Tags API"
				],
				"security": [],
				"parameters": [
					{
						"description": "Name of a tag",
						"in": "path",
						"name": "name",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Boolean to include associated Seals",
						"in": "query",
						"name": "includeSeals",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					}
				]
			}
		},
		"/api/tags/name/{name}": {
			"delete": {
				"operationId": "DeleteTagByName",
				"responses": {
					"200": {
						"description": "Deletion confirmation",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SealResponse"
								}
							}
						}
					}
				},
				"description": "Delete a Tag by Name",
				"tags": [
					"Tags API"
				],
				"security": [],
				"parameters": [
					{
						"description": "Id of a tag to delete",
						"in": "path",
						"name": "name",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/seal": {
			"get": {
				"operationId": "GetRandomSeal",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"description": "Get a random Seal image",
				"tags": [
					"Seals"
				],
				"security": [],
				"parameters": [
					{
						"description": "Render the seal in a HTML document",
						"in": "query",
						"name": "html",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					}
				]
			}
		},
		"/seal/tag/{tag}": {
			"get": {
				"operationId": "GetRandomSealByTag",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"description": "Get a random Seal image with a set tag",
				"tags": [
					"Seals"
				],
				"security": [],
				"parameters": [
					{
						"description": "Type of seal to get",
						"in": "path",
						"name": "tag",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Render the seal in a HTML document",
						"in": "query",
						"name": "html",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					}
				]
			}
		},
		"/seal/id/{id}": {
			"get": {
				"operationId": "GetSealById",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"description": "Get a Seal with a specific ID",
				"tags": [
					"Seals"
				],
				"security": [],
				"parameters": [
					{
						"description": "ID of seal to get",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}